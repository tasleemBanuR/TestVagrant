package com.TestVagrant.NDTV.Tests;

import java.io.File;
import java.io.FileOutputStream;
import java.sql.Timestamp;
import java.util.Calendar;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.testng.annotations.Test;

import com.TestVagrant.NDTV.Pages.Navigate;
import com.TestVagrant.NDTV.Utiities.Excel;
import com.TestVagrant.NDTV.Utiities.WriteExcel;

public class DataTest {
	XSSFWorkbook workbook = new XSSFWorkbook();

	@Test
	public void dashboardTime() throws Exception {
		Navigate nav = new Navigate();
		XSSFSheet outputSheet = WriteExcel.createExcelSheet("TestSheet", workbook);
		Calendar cal = Calendar.getInstance();
		XSSFSheet sheet = Excel.getSheet("Sheet1");
		Row row = null;
		
			Row outputRow;

			outputRow.createCell(0).setCellValue(String.valueOf(lp.excelsyncheck(i)));
			outputRow.createCell(1).setCellValue(String.valueOf(lan.exceladdFarmerScreen(i)));
			outputRow.createCell(2).setCellValue(String.valueOf(lan.exceladdAssetScreen(i)));
			outputRow.createCell(3).setCellValue(String.valueOf(lan.excelraiseAlertScreen(i)));
			outputRow.createCell(4).setCellValue(String.valueOf(lan.exceltakePhotoScreen(i)));
			outputRow.createCell(5).setCellValue(String.valueOf(lan.excelstatisticsScreen(i)));
			outputRow.createCell(6).setCellValue(String.valueOf(lan.excelformsScreen(i)));
			outputRow.createCell(7).setCellValue(String.valueOf(lan.excelfarmerScreen(i)));
			outputRow.createCell(8).setCellValue(String.valueOf(lan.excelassetScreen(i)));
			outputRow.createCell(9).setCellValue(String.valueOf(lan.exceltaskScreen(i)));

			Row header = outputSheet.createRow(0);
			System.out.println("creating Column Names Now ");
			header.createCell(0).setCellValue("Sync Time");
			header.createCell(1).setCellValue("Add Farmer");
			header.createCell(2).setCellValue("Add Asset");
			header.createCell(3).setCellValue("Raise Alert");
			header.createCell(4).setCellValue("Take Photo");
			header.createCell(5).setCellValue("View More");
			header.createCell(6).setCellValue("Forms");
			header.createCell(7).setCellValue("Farmers");
			header.createCell(8).setCellValue("Assests");
			header.createCell(9).setCellValue("Tasks");

			System.out.println("creating Column Names Now ");
			for (int columnIndex = 0; columnIndex <= 9; columnIndex++) {
				outputSheet.autoSizeColumn(columnIndex);
			}
		}

		try {
			System.out.println("Sheet Started Now");
			String timeStamp = new Timestamp(System.currentTimeMillis()).toString();
			timeStamp = timeStamp.substring(0, timeStamp.length() - 6).replaceAll(":", "");
			String fileName = "./OutputFile";
			String fileStamp = fileName + " " + timeStamp;
			System.out.println("Sheet Started Now");
			File newFile = new File(fileStamp + ".xlsx");
			FileOutputStream out = null;
			if (newFile.exists()) {
				out = new FileOutputStream(fileStamp + ".xlsx");
			} else {
				out = new FileOutputStream(new File(fileStamp + ".xlsx"));

			}
			System.out.println("Sheet Started Now");
			workbook.write(out);
			out.close();
			System.out.println("File is created successfully");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
